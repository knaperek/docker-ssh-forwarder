#!/bin/bash
#
# AUTHORS: Pavol Ivanko & Jozef Knaperek, (c) 2019
#
# LICENSE: MIT
#
# PURPOSE: This script forwards the control domain socket of a remote Docker Engine to the local machine via SSH tunnel
#          and sets up the local environment to talk to the remote Docker Engine.
#          The main objective is not to rely on Docker's TLS endpoint for remote control but instead leverage the existing
#          access mechanism made for this purpose - SSH. The access is easier to mange and you don't need to open up
#          an additional port on your firewall just for Docker access.
#
# USAGE:   fodo <hostname>
#

set -e
if [ "$#" -ne 1 ]; then
    echo "Usagge: fodo <hostname>"
    exit 1
fi

TARGET_DIR=$(mktemp --directory --tmpdir dockerssh-$1-XXXXXXXX)
DOCKER_SOCKET=$TARGET_DIR/docker.sock
CONTROL_SSH_SOCKET=$TARGET_DIR/ssh-control.sock

function cleanup {
	ssh -S $CONTROL_SSH_SOCKET -O exit root@$1
	rm -r $TARGET_DIR
}
trap cleanup EXIT

ssh -M -S $CONTROL_SSH_SOCKET -fnNT -o StreamLocalBindUnlink=yes -o ExitOnForwardFailure=yes -L $DOCKER_SOCKET:/var/run/docker.sock root@$1

export DOCKER_HOST=unix://$DOCKER_SOCKET
export DOCKER_MACHINE_NAME=$(docker info --format '{{ .Name }}')

$SHELL
